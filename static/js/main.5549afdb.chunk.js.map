{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","href","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","paylod","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","style","cursor","onClick","float","color","bind","marginRight","Contacts","deleteContact","console","log","newContacts","Fragment","key","TextInputGroup","label","placeholder","error","onChange","htmlFor","classnames","AddContact1","errors","e","currentTarget","onSubmit","preventDefault","newContact","post","history","goBack","EditContact","updatedContact","match","params","put","push","About","App","exact","path","component","AddContact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5549afdb.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar text-light bg-dark mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav m-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                Home\r\n                                <i className=\"fas fa-home\"></i>\r\n                            </Link>\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                Add\r\n                                <i className=\"fas fa-plus\"></i>\r\n                            </Link>\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                About\r\n                                <i className=\"fas fa-question\"></i>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact =>\r\n                    contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n        case 'EDIT_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts:\r\n                    state.contacts.map(contact =>\r\n                        contact.id === action.paylod.id\r\n                            ? (contact = action.payload)\r\n                            : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//here global app state\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action));\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios\r\n            .get('http://jsonplaceholder.typicode.com/users');\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from  'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nexport default class Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, id } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}\r\n                                <i\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}>\r\n\r\n                                </i>\r\n                                <i className=\"fas fa-times\"\r\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                 <i \r\n                                    className=\"fas fa-pencil-alt\"\r\n                                    style={{\r\n                                        cursor:'pointer',\r\n                                        float: 'right',\r\n                                        color:'black',\r\n                                        marginRight:'1rem'\r\n                                    }}\r\n                                    >\r\n                                 </i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (<ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email:{email}</li>\r\n                                <li className=\"list-group-item\">Phone:{phone}</li>\r\n                            </ul>) : null}\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n\r\n    deleteContact = (id) => {\r\n        console.log(id);\r\n        const { contacts } = this.state;\r\n        const newContacts = contacts.filter(contact =>\r\n            contact.id !== id\r\n        );\r\n        this.setState({ contacts: newContacts });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact </span>List\r\n                            </h1>\r\n                            {contacts.map(contact =>\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            )\r\n                            }\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TextInputGroup({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    error,\r\n    onChange\r\n}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"name\">{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n            </input>\r\n            {error && <div className=\"invalid-feedback\">{error}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nexport default class AddContact1 extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.currentTarget.value,\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //  var re = /^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\r\n\r\n        //check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n        // if (email !== '' && !re.test(email)) {\r\n        //     this.setState({ errors: { email: 'Invalid email address' } });\r\n        //     return;\r\n        // }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n        const newContact = {\r\n            //id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const res  = await axios.post('http://jsonplaceholder.typicode.com/users', newContact);\r\n        \r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n        //clear form\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        });\r\n        this.props.history.goBack();\r\n   \r\n\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        placeholder=\"Enter name...\"\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    >\r\n                                    </TextInputGroup>\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Enter email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    >\r\n                                    </TextInputGroup>\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Enter phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    >\r\n                                    </TextInputGroup>\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                        onClick={this.onSubmit.bind(this, dispatch)}\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\nexport default class EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const{id} =this.props.match.params;\r\n        const res= await axios.get(`http://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n        //dispatch({ type: 'EDIT_CONTACT', payload: id });\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.currentTarget.value,\r\n        })\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //  var re = /^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\r\n\r\n        //check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n        // if (email !== '' && !re.test(email)) {\r\n        //     this.setState({ errors: { email: 'Invalid email address' } });\r\n        //     return;\r\n        // }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n        const updatedContact = {\r\n            //id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const {id}  = this.props.match.params;\r\n        const res  = await axios.put(`http://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\r\n        \r\n        dispatch({ type: 'EDIT_CONTACT', payload: res.data });\r\n        //clear form\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        placeholder=\"Enter name...\"\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    >\r\n                                    </TextInputGroup>\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Update email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    >\r\n                                    </TextInputGroup>\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Update phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    >\r\n                                    </TextInputGroup>\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                        onClick={this.onSubmit.bind(this, dispatch)}\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                About Contact Manager\r\n                </h1>\r\n          <p className=\"lead\">Simple app to manage contacts</p>\r\n          <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from '../src/context';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './pages/About';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}